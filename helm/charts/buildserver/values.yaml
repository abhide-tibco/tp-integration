# Default values for buildserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  buildserver:
    data:
      namespace: dp-integration-default
    image:
      registry: 664529841144.dkr.ecr.ap-southeast-2.amazonaws.com
      tag: 2557-dp-integration
    logging:
      image:
        enabled: false
        registry: ""
        tag: ""
        resources: {}

replicaCount: 1

image:
  repository: tci/buildserver
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 7811
  targetPort: 7811

#ingress:
#  enabled: false
#  annotations: {}
#    # kubernetes.io/ingress.class: nginx
#    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths: []
#  tls: []
#  #  - secretName: chart-example-tls
#  #    hosts:
#  #      - chart-example.local

ingress:
  # -- Enables configuration of ingress to expose buildserver. Requires ingress support in the Kubernetes cluster.
  enabled: false
  ingressClassName: haproxy-dp-dp1
  hosts:
    - host: ""
      paths:
        - path: /tibco/agent/integration/buildserver/
          pathType: Prefix
  # -- Annotations for the ingress object. See documentation for your ingress controller for valid annotations.
  annotations: {}
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  DP_INTERNAL_URL: "test.tci-env.ap-southeast-2.tcie.pro"

volumes:
  buildserver:
    volumePath: "/data/"
    persistentVolumeClaim:
      # -- If `true`, then a `PersistentVolumeClaim` (PVC) is created.
      create: true

      # -- Specifies the name of the `StorageClass`
      storageClassName: "gp2"

      # -- Specifies the standard K8s resource requests and/or limits
      resources:
        requests:
          storage: 8Gi

      accessModes:
        - ReadWriteOnce

      volumeMode: Filesystem

      # -- Specifies the name of the persistent volume
      volumeName: ""

    # -- When `persistentVolumeClaim.create` is `false`, then use this value to define an already-existing PVC.
    existingClaim: ""
